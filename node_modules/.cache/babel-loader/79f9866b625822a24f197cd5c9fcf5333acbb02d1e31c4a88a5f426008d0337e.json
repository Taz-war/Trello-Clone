{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Trello-Clone\\\\src\\\\pages\\\\BoardDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useContext } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { ListContext } from \"../contexts/List\";\nimport { TaskContext } from \"../contexts/Task\";\nimport { BoardContext } from \"../contexts/Board\";\nimport AddItem from \"../components/AddItem\";\nimport AddItemForm from \"../components/AddItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardDetails = () => {\n  _s();\n  const [editMode, setEditMode] = useState(false);\n  const [listTitle, setListTitle] = useState(\"\");\n  const {\n    boardId\n  } = useParams();\n  const {\n    lists,\n    dispatchListAction\n  } = useContext(ListContext);\n  const {\n    dispatchBoardAction\n  } = useContext(BoardContext);\n  const {\n    dispatchTaskAction\n  } = useContext(TaskContext);\n  const submitHandler = e => {\n    e.preventDefault();\n    const id = Date.now();\n    dispatchListAction({\n      type: \"CREATE_LIST\",\n      payload: {\n        id: id,\n        title: listTitle,\n        boardId: boardId\n      }\n    });\n    dispatchBoardAction({\n      type: 'ADD_LIST_ID_TO_A_BOARD',\n      payload: {\n        id: boardId,\n        listId: id\n      }\n    });\n    setEditMode(false);\n    setListTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex m-top-sm flex-direction-row\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Boards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), lists.filter(item => item.boardId === boardId).map((taskList, index) => /*#__PURE__*/_jsxDEV(Tas, {\n      taskList: taskList,\n      index: index\n    }, taskList.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)), !editMode ? /*#__PURE__*/_jsxDEV(AddItem, {\n      listAddItem: true,\n      setEditMode: setEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddItemForm, {\n      setEditMode: setEditMode,\n      listForm: true,\n      submitHandler: submitHandler,\n      title: listTitle,\n      onChangeHandler: e => setListTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardDetails, \"8PiL0o9mkMHG85P7ZMdfeOU8Jf0=\", false, function () {\n  return [useParams];\n});\n_c = BoardDetails;\nexport default BoardDetails;\nvar _c;\n$RefreshReg$(_c, \"BoardDetails\");","map":{"version":3,"names":["React","useState","useContext","useParams","Link","ListContext","TaskContext","BoardContext","AddItem","AddItemForm","jsxDEV","_jsxDEV","BoardDetails","_s","editMode","setEditMode","listTitle","setListTitle","boardId","lists","dispatchListAction","dispatchBoardAction","dispatchTaskAction","submitHandler","e","preventDefault","id","Date","now","type","payload","title","listId","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","map","taskList","index","Tas","listAddItem","listForm","onChangeHandler","target","value","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/Trello-Clone/src/pages/BoardDetails.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { ListContext } from \"../contexts/List\";\r\nimport { TaskContext } from \"../contexts/Task\";\r\nimport { BoardContext } from \"../contexts/Board\";\r\nimport AddItem from \"../components/AddItem\";\r\nimport AddItemForm from \"../components/AddItemForm\";\r\n\r\nconst BoardDetails = () => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [listTitle, setListTitle] = useState(\"\");\r\n  const { boardId } = useParams();\r\n\r\n  const { lists,dispatchListAction } = useContext(ListContext);\r\n  const {dispatchBoardAction} = useContext(BoardContext)\r\n  const { dispatchTaskAction } = useContext(TaskContext)\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    const id = Date.now();\r\n    dispatchListAction({ type:\"CREATE_LIST\",payload:{id:id,title:listTitle,boardId:boardId} })\r\n    dispatchBoardAction({ type:'ADD_LIST_ID_TO_A_BOARD',payload:{id:boardId,listId:id}})\r\n    setEditMode(false)\r\n    setListTitle('')\r\n  };\r\n  return (\r\n    <div className=\"d-flex m-top-sm flex-direction-row\">\r\n      <Link to={\"/\"}>Back to Boards</Link>\r\n      {lists\r\n        .filter((item) => item.boardId === boardId)\r\n        .map((taskList,index) => (\r\n          <Tas\r\n            taskList={taskList}\r\n            key={taskList.id}\r\n            index={index}\r\n          />\r\n        ))}\r\n      {!editMode ? (\r\n        <AddItem listAddItem setEditMode={setEditMode} />\r\n      ) : (\r\n        <AddItemForm\r\n          setEditMode={setEditMode}\r\n          listForm\r\n          submitHandler={submitHandler}\r\n          title={listTitle}\r\n          onChangeHandler={(e)=>setListTitle(e.target.value)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEiB;EAAQ,CAAC,GAAGf,SAAS,EAAE;EAE/B,MAAM;IAAEgB,KAAK;IAACC;EAAmB,CAAC,GAAGlB,UAAU,CAACG,WAAW,CAAC;EAC5D,MAAM;IAACgB;EAAmB,CAAC,GAAGnB,UAAU,CAACK,YAAY,CAAC;EACtD,MAAM;IAAEe;EAAmB,CAAC,GAAGpB,UAAU,CAACI,WAAW,CAAC;EAEtD,MAAMiB,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,EAAE;IACrBR,kBAAkB,CAAC;MAAES,IAAI,EAAC,aAAa;MAACC,OAAO,EAAC;QAACJ,EAAE,EAACA,EAAE;QAACK,KAAK,EAACf,SAAS;QAACE,OAAO,EAACA;MAAO;IAAE,CAAC,CAAC;IAC1FG,mBAAmB,CAAC;MAAEQ,IAAI,EAAC,wBAAwB;MAACC,OAAO,EAAC;QAACJ,EAAE,EAACR,OAAO;QAACc,MAAM,EAACN;MAAE;IAAC,CAAC,CAAC;IACpFX,WAAW,CAAC,KAAK,CAAC;IAClBE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EACD,oBACEN,OAAA;IAAKsB,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBACjDvB,OAAA,CAACP,IAAI;MAAC+B,EAAE,EAAE,GAAI;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,EACnCpB,KAAK,CACHqB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACvB,OAAO,KAAKA,OAAO,CAAC,CAC1CwB,GAAG,CAAC,CAACC,QAAQ,EAACC,KAAK,kBAClBjC,OAAA,CAACkC,GAAG;MACFF,QAAQ,EAAEA,QAAS;MAEnBC,KAAK,EAAEA;IAAM,GADRD,QAAQ,CAACjB,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGnB,CAAC,EACH,CAACzB,QAAQ,gBACRH,OAAA,CAACH,OAAO;MAACsC,WAAW;MAAC/B,WAAW,EAAEA;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAEjD5B,OAAA,CAACF,WAAW;MACVM,WAAW,EAAEA,WAAY;MACzBgC,QAAQ;MACRxB,aAAa,EAAEA,aAAc;MAC7BQ,KAAK,EAAEf,SAAU;MACjBgC,eAAe,EAAGxB,CAAC,IAAGP,YAAY,CAACO,CAAC,CAACyB,MAAM,CAACC,KAAK;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAC1B,EAAA,CA1CID,YAAY;EAAA,QAGIT,SAAS;AAAA;AAAAgD,EAAA,GAHzBvC,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
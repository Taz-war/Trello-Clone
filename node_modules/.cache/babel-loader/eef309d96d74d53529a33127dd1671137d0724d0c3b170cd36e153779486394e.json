{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Trello-Clone\\\\src\\\\components\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { TaskContext } from \"../contexts/Task\";\nimport { ListContext } from \"../contexts/List\";\nimport { BoardContext } from \"../contexts/Board\";\nimport { useState, useContext } from \"react\";\nimport { icons } from \"../assets\";\nimport AddItemForm from \"./AddItemForm\";\nimport AddItem from \"./AddItem\";\nimport TaskCard from \"./TaskCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _ref => {\n  _s();\n  var _taskList$tasks$map;\n  let {\n    taskList\n  } = _ref;\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [editMode, setEditMode] = useState(false);\n  const {\n    title\n  } = taskList;\n  const {\n    tasks,\n    dispatchTaskAction\n  } = useContext(TaskContext);\n  const {\n    dispatchListAction\n  } = useContext(ListContext);\n  const {\n    dispatchBoardAction\n  } = useContext(BoardContext);\n  const submitHandler = e => {\n    e.preventDefault();\n    const id = Date.now() + \"\";\n    dispatchTaskAction({\n      type: \"CREATE_TASK\",\n      payload: {\n        id: id,\n        title: taskTitle,\n        listId: taskList.id,\n        boardId: taskList.boardId\n      }\n    });\n    dispatchListAction({\n      type: \"ADD_TASK_ID_TO_A_LIST\",\n      payload: {\n        id: taskList.id,\n        taskId: id\n      }\n    });\n    dispatchBoardAction({\n      type: \"ADD_TASK_ID_TO_A_BOARD\",\n      payload: {\n        id: taskList.boardId,\n        taskId: id\n      }\n    });\n    setTaskTitle(\"\");\n    setEditMode(false);\n  };\n  const removeListHandler = () => {\n    dispatchListAction({\n      type: \"REMOVE_LIST\",\n      payload: taskList.id\n    });\n    dispatchBoardAction({\n      type: \"REMOVE_LIST_ID_FROM_A_BOARD\",\n      payload: {\n        id: taskList.boardId,\n        listId: taskList.id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icons.crossIcon,\n        onClick: removeListHandler,\n        className: \"add-item-icon\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), (_taskList$tasks$map = taskList.tasks.map(item => {\n      return tasks.find(i => i.id === item);\n    })) === null || _taskList$tasks$map === void 0 ? void 0 : _taskList$tasks$map.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n      index: index,\n      id: task.id,\n      taskList: taskList,\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)), editMode ? /*#__PURE__*/_jsxDEV(AddItemForm, {\n      submitHandler: submitHandler,\n      title: taskTitle,\n      onChangeHandler: e => setTaskTitle(e.target.value),\n      setEditMode: setEditMode,\n      editMode: editMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddItem, {\n      setEditMode: setEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"+xtQxoTi/8bjpXdkn5KWvxzvQEI=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskContext","ListContext","BoardContext","useState","useContext","icons","AddItemForm","AddItem","TaskCard","jsxDEV","_jsxDEV","TaskList","_ref","_s","_taskList$tasks$map","taskList","taskTitle","setTaskTitle","editMode","setEditMode","title","tasks","dispatchTaskAction","dispatchListAction","dispatchBoardAction","submitHandler","e","preventDefault","id","Date","now","type","payload","listId","boardId","taskId","removeListHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","crossIcon","onClick","alt","map","item","find","i","task","index","onChangeHandler","target","value","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/Trello-Clone/src/components/TaskList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { TaskContext } from \"../contexts/Task\";\r\nimport { ListContext } from \"../contexts/List\";\r\nimport { BoardContext } from \"../contexts/Board\";\r\nimport { useState, useContext } from \"react\";\r\nimport { icons } from \"../assets\";\r\nimport AddItemForm from \"./AddItemForm\";\r\nimport AddItem from \"./AddItem\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\nconst TaskList = ({ taskList }) => {\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const { title } = taskList;\r\n  const { tasks, dispatchTaskAction } = useContext(TaskContext);\r\n  const { dispatchListAction } = useContext(ListContext);\r\n  const { dispatchBoardAction } = useContext(BoardContext);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const id = Date.now() + \"\";\r\n\r\n    dispatchTaskAction({\r\n      type: \"CREATE_TASK\",\r\n      payload: {\r\n        id: id,\r\n        title: taskTitle,\r\n        listId: taskList.id,\r\n        boardId: taskList.boardId,\r\n      },\r\n    });\r\n    dispatchListAction({\r\n      type: \"ADD_TASK_ID_TO_A_LIST\",\r\n      payload: { id: taskList.id, taskId: id },\r\n    });\r\n    dispatchBoardAction({\r\n      type: \"ADD_TASK_ID_TO_A_BOARD\",\r\n      payload: { id: taskList.boardId, taskId: id },\r\n    });\r\n    setTaskTitle(\"\");\r\n    setEditMode(false);\r\n  };\r\n\r\n  const removeListHandler = () => {\r\n    dispatchListAction({ type: \"REMOVE_LIST\", payload: taskList.id });\r\n    dispatchBoardAction({\r\n      type: \"REMOVE_LIST_ID_FROM_A_BOARD\",\r\n      payload: { id: taskList.boardId, listId: taskList.id },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div className=\"list-title-container\">\r\n        <h5>{title}</h5>\r\n        <img\r\n          src={icons.crossIcon}\r\n          onClick={removeListHandler}\r\n          className=\"add-item-icon\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      {taskList.tasks\r\n        .map((item) => {\r\n          return tasks.find((i) => i.id === item);\r\n        })\r\n        ?.map((task, index) => (\r\n          <TaskCard\r\n            index={index}\r\n            id={task.id}\r\n            taskList={taskList}\r\n            task={task}\r\n            key={task.id}\r\n          />\r\n        ))}\r\n      {editMode ? (\r\n        <AddItemForm\r\n          submitHandler={submitHandler}\r\n          title={taskTitle}\r\n          onChangeHandler={(e) => setTaskTitle(e.target.value)}\r\n          setEditMode={setEditMode}\r\n          editMode={editMode}\r\n        />\r\n      ) : (\r\n        <AddItem setEditMode={setEditMode} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export const taskReducer = (tasks, action) => {\n  switch (action.type) {\n    case 'CREATE_TASK':\n      {\n        // Check if the task already exists\n        const existingTask = tasks.find(task => task.id === action.payload.id);\n        if (existingTask) {\n          return tasks; // If the task exists, do nothing\n        }\n\n        const task = {\n          id: action.payload.id,\n          title: action.payload.title,\n          boardId: action.payload.boardId,\n          listId: action.payload.listId\n        };\n        return [...tasks, task];\n      }\n    case 'REMOVE_TASK':\n      {\n        return tasks.filter(item => item.id !== action.payload);\n      }\n    case 'UPDATE_TASK':\n      {\n        return tasks.map(item => {\n          if (item.id === action.payload.id) {\n            item.title = action.payload.title;\n          }\n          return item;\n        });\n      }\n    case 'CHANGE_LIST_ID_OF_A_TASK':\n      {\n        console.log(action.payload);\n        return tasks.map(item => {\n          if (item.id === action.payload.id) {\n            item.listId = action.payload.listId;\n          }\n          return item;\n        });\n      }\n    case 'CHANGE_BOARD_ID_OF_A_TASK':\n      {\n        return tasks.map(item => {\n          if (item.id === action.payload.id) {\n            item.boardId = action.payload.boardId;\n          }\n          return item;\n        });\n      }\n    default:\n      {\n        return tasks;\n      }\n  }\n};","map":{"version":3,"names":["taskReducer","tasks","action","type","existingTask","find","task","id","payload","title","boardId","listId","filter","item","map","console","log"],"sources":["C:/Users/USER/Documents/GitHub/Trello-Clone/src/reducers/task.js"],"sourcesContent":["export const taskReducer = (tasks, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_TASK': {\r\n            // Check if the task already exists\r\n            const existingTask = tasks.find(task => task.id === action.payload.id);\r\n            if (existingTask) {\r\n                return tasks; // If the task exists, do nothing\r\n            }\r\n\r\n            const task = {\r\n                id: action.payload.id,\r\n                title: action.payload.title,\r\n                boardId: action.payload.boardId,\r\n                listId: action.payload.listId\r\n            };\r\n\r\n            return [...tasks, task];\r\n        }\r\n\r\n        case 'REMOVE_TASK': {\r\n            return tasks.filter(item => item.id !== action.payload);\r\n        }\r\n\r\n        case 'UPDATE_TASK': {\r\n            return tasks.map(item => {\r\n                if (item.id === action.payload.id) {\r\n                    item.title = action.payload.title;\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n\r\n        case 'CHANGE_LIST_ID_OF_A_TASK': {\r\n            console.log(action.payload);\r\n            return tasks.map(item => {\r\n                if (item.id === action.payload.id) {\r\n                    item.listId = action.payload.listId;\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n\r\n        case 'CHANGE_BOARD_ID_OF_A_TASK': {\r\n            return tasks.map(item => {\r\n                if (item.id === action.payload.id) {\r\n                    item.boardId = action.payload.boardId;\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n\r\n        default: {\r\n            return tasks;\r\n        }\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MAAE;QAChB;QACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;QACtE,IAAIH,YAAY,EAAE;UACd,OAAOH,KAAK,CAAC,CAAC;QAClB;;QAEA,MAAMK,IAAI,GAAG;UACTC,EAAE,EAAEL,MAAM,CAACM,OAAO,CAACD,EAAE;UACrBE,KAAK,EAAEP,MAAM,CAACM,OAAO,CAACC,KAAK;UAC3BC,OAAO,EAAER,MAAM,CAACM,OAAO,CAACE,OAAO;UAC/BC,MAAM,EAAET,MAAM,CAACM,OAAO,CAACG;QAC3B,CAAC;QAED,OAAO,CAAC,GAAGV,KAAK,EAAEK,IAAI,CAAC;MAC3B;IAEA,KAAK,aAAa;MAAE;QAChB,OAAOL,KAAK,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKL,MAAM,CAACM,OAAO,CAAC;MAC3D;IAEA,KAAK,aAAa;MAAE;QAChB,OAAOP,KAAK,CAACa,GAAG,CAACD,IAAI,IAAI;UACrB,IAAIA,IAAI,CAACN,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,EAAE;YAC/BM,IAAI,CAACJ,KAAK,GAAGP,MAAM,CAACM,OAAO,CAACC,KAAK;UACrC;UACA,OAAOI,IAAI;QACf,CAAC,CAAC;MACN;IAEA,KAAK,0BAA0B;MAAE;QAC7BE,OAAO,CAACC,GAAG,CAACd,MAAM,CAACM,OAAO,CAAC;QAC3B,OAAOP,KAAK,CAACa,GAAG,CAACD,IAAI,IAAI;UACrB,IAAIA,IAAI,CAACN,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,EAAE;YAC/BM,IAAI,CAACF,MAAM,GAAGT,MAAM,CAACM,OAAO,CAACG,MAAM;UACvC;UACA,OAAOE,IAAI;QACf,CAAC,CAAC;MACN;IAEA,KAAK,2BAA2B;MAAE;QAC9B,OAAOZ,KAAK,CAACa,GAAG,CAACD,IAAI,IAAI;UACrB,IAAIA,IAAI,CAACN,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,EAAE;YAC/BM,IAAI,CAACH,OAAO,GAAGR,MAAM,CAACM,OAAO,CAACE,OAAO;UACzC;UACA,OAAOG,IAAI;QACf,CAAC,CAAC;MACN;IAEA;MAAS;QACL,OAAOZ,KAAK;MAChB;EAAC;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
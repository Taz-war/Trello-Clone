{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Trello-Clone\\\\src\\\\components\\\\TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { TaskContext } from \"../contexts/Task\";\nimport { ListContext } from \"../contexts/List\";\nimport { BoardContext } from \"../contexts/Board\";\nimport { useState, useContext } from 'react';\nimport { icons } from '../assets';\nimport AddItemForm from './AddItemForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = _ref => {\n  _s();\n  let {\n    task,\n    index\n  } = _ref;\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [editMode, setEditMode] = useState(false);\n  const {\n    dispatchTaskAction\n  } = useContext(TaskContext);\n  const {\n    dispatchListAction\n  } = useContext(ListContext);\n  const {\n    dispatchBoardAction\n  } = useContext(BoardContext);\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatchTaskAction({\n      type: 'UPDATE_TASK',\n      payload: {\n        id: task.id,\n        title: taskTitle\n      }\n    });\n    setEditMode(false);\n  };\n  const removeHandler = () => {\n    dispatchTaskAction({\n      type: \"REMOVE_TASK\",\n      payload: {\n        id: task.id\n      }\n    });\n    dispatchListAction({\n      type: \"REMOVE_TASK_ID_TO_A_LIST\",\n      payload: {\n        id: task.listId,\n        taskId: task.id\n      }\n    });\n    dispatchBoardAction({\n      type: \"REMOVE_TASK_ID_FROM_A_BOARD\",\n      payload: {\n        id: task.boardId,\n        taskId: task.id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editMode ? /*#__PURE__*/_jsxDEV(AddItemForm, {\n      onChangeHandler: e => setTaskTitle(e.target.value),\n      title: taskTitle,\n      setEditMode: setEditMode,\n      submitHandler: submitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setEditMode(true),\n      className: \"task-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: taskTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icons.crossIcon,\n        onClick: removeHandler,\n        className: \"add-item-icon\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskCard, \"PBhKpvdTcHUtWyYpJADGTauThNk=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","TaskContext","ListContext","BoardContext","useState","useContext","icons","AddItemForm","jsxDEV","_jsxDEV","TaskCard","_ref","_s","task","index","taskTitle","setTaskTitle","title","editMode","setEditMode","dispatchTaskAction","dispatchListAction","dispatchBoardAction","submitHandler","e","preventDefault","type","payload","id","removeHandler","listId","taskId","boardId","children","onChangeHandler","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","src","crossIcon","alt","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/Trello-Clone/src/components/TaskCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport { TaskContext } from \"../contexts/Task\";\r\nimport { ListContext } from \"../contexts/List\";\r\nimport { BoardContext } from \"../contexts/Board\";\r\nimport { useState, useContext } from 'react';\r\nimport { icons } from '../assets';\r\nimport AddItemForm from './AddItemForm';\r\n\r\nconst TaskCard = ({ task, index }) => {\r\n    const [taskTitle, setTaskTitle] = useState(task.title)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const { dispatchTaskAction } = useContext(TaskContext)\r\n    const { dispatchListAction } = useContext(ListContext)\r\n    const { dispatchBoardAction } = useContext(BoardContext)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatchTaskAction({ type: 'UPDATE_TASK', payload: { id: task.id, title: taskTitle } })\r\n        setEditMode(false)\r\n    }\r\n\r\n    const removeHandler = () => {\r\n        dispatchTaskAction({ type: \"REMOVE_TASK\", payload: { id: task.id } })\r\n        dispatchListAction({ type: \"REMOVE_TASK_ID_TO_A_LIST\", payload: { id: task.listId, taskId: task.id } })\r\n        dispatchBoardAction({ type: \"REMOVE_TASK_ID_FROM_A_BOARD\", payload: { id: task.boardId, taskId: task.id } })\r\n    }\r\n    return (\r\n        <div>\r\n            {editMode ? (\r\n                <AddItemForm onChangeHandler={(e) => setTaskTitle(e.target.value)} title={taskTitle} setEditMode={setEditMode} submitHandler={submitHandler} />\r\n            ) : (\r\n                    <div onClick={() => setEditMode(true)} className=\"task-card\">\r\n                    <p>{taskTitle}</p>\r\n                        <img src={icons.crossIcon} onClick={removeHandler} className=\"add-item-icon\" alt=\"\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}